name: build
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
jobs:
  build:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu-18.04", artifact: "uduntu-18.04.tar.xz",
            os: ubuntu-18.04,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        # - {
        #     name: "Ubuntu-20.04", artifact: "uduntu-20.04.tar.xz",
        #     os: ubuntu-20.04,
        #     build_type: "Release", cc: "gcc", cxx: "g++"
        #   }
    steps:
    - uses: actions/checkout@v2

    #Import GPG key
    - name: Import GPG key
      # env: 
      #   GPG_KEY: ${{secrets.GPG_KEY}}
      # run: sudo apt-key add "$env:GPG_KEY"
      run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc
          gpg --dearmor -
          sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null


    #Add repository
    - name: Add repository
      run: sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'

    # install dependencies
    - name: Install dependencies
      run: |
           sudo apt update
           sudo apt install -y git g++-8 cmake libssl-dev libgmp-dev zlib1g-dev
           sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8

    # install boost
    - name: Install boost
      run: |
           wget https://dl.bintray.com/boostorg/release/1.67.0/source/boost_1_67_0.tar.gz
           tar -xvzf boost_1_67_0.tar.gz
           cd boost_1_67_0
           ./bootstrap.sh
           sudo ./b2 install -j 2
           cd ..

    #update submodules
    - name: Update git submodule
      run: git submodule update --init --recursive

    # build project
    - name: Build project
      run: |
          mkdir -p build
          cd build
          cmake ..
          make
    